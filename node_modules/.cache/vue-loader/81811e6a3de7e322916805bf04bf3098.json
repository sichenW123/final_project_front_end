{"remainingRequest":"/Users/sichenwang/Desktop/cs6200-project/node-es/goal_search/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sichenwang/Desktop/cs6200-project/node-es/goal_search/src/views/News.vue?vue&type=style&index=0&id=1aa8c6e6&scoped=true&lang=css&","dependencies":[{"path":"/Users/sichenwang/Desktop/cs6200-project/node-es/goal_search/src/views/News.vue","mtime":1586996696544},{"path":"/Users/sichenwang/Desktop/cs6200-project/node-es/goal_search/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sichenwang/Desktop/cs6200-project/node-es/goal_search/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/sichenwang/Desktop/cs6200-project/node-es/goal_search/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/sichenwang/Desktop/cs6200-project/node-es/goal_search/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sichenwang/Desktop/cs6200-project/node-es/goal_search/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAgLm1pZGRsZXsKICBtYXJnaW46IDBweCBhdXRvOwogIG1hcmdpbi10b3A6IDBweDsKICB3aWR0aDogNDAwcHg7Cn0KICAuZ3V0dXsKICAgIGZvbnQtZmFtaWx5OiAnR290dScsIHNhbnMtc2VyaWY7CiAgfQoK"},{"version":3,"sources":["News.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"News.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    \n    \n    <div >\n      \n      <Autocomplete class=\"middle\" />\n      <!-- <SearchNews /> -->\n      <br>\n      <br>\n      <br>\n      <br>\n      <br>\n      <br>\n      <teamList v-bind:teams=\"teams\" v-if=\"!this.teams.length==0\" />\n      <br>\n      <br>\n      <br>\n      <PlayerList v-bind:players=\"players\" v-if=\"!this.players.length==0\" />\n      <br>\n      <br>\n      <br>\n     \n      <b-dropdown id=\"dropdown-dropright\" dropright text=\"Search By\" variant=\"light\" class=\"m-2\" v-if=\"!this.newses.length==0\">\n        <b-dropdown-item href=\"#\" v-on:click=\" setStatus('date') \">By Date</b-dropdown-item>\n        <b-dropdown-item href=\"#\" v-on:click=\" setStatus('rel')\" >By Relevence</b-dropdown-item>\n        <b-dropdown-item href=\"#\" v-on:click=\" setStatus('tag')\" >By Tags</b-dropdown-item>\n      </b-dropdown>\n      <NewsList   v-bind:newses=\"newses\"/>\n      <br>\n      <br>\n      <br>\n      <NextPage v-if=\"!this.newses.length==0\" />\n    </div>\n    \n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\n\n\n\nimport NewsList from '../components/NewsList'\nimport NextPage from '../components/NextPage'\nimport teamList from '../components/teamList'\nimport PlayerList from '../components/PlayerList'\nimport Autocomplete from '../components/Autocomplete'\n\nexport default {\n  name: 'news',\n  components: {\n   \n    NewsList,\n    NextPage,\n    teamList,\n    Autocomplete,\n    PlayerList\n  },\n  data(){\n    console.log(this.status)\n      return{\n          query:'',\n          newses: [],\n          page: 1,\n          status:1,\n          teams:[],\n          players:[]\n      }\n  },\n  watch:{\n    '$route.query.search':{\n      immediate: true,\n      async handler(value){\n        console.log(this.query)\n        const status=this.$route.query.status\n        \n        if(value!==undefined){\n          fetch(`http://localhost:5000/api/search/player?q=${value}`)\n              .then(response=> response.json())\n              .then(response=>{\n            console.log(response)\n            this.players=response})\n          fetch(`http://localhost:5000/api/search/team?q=${value}`)\n              .then(response=> response.json())\n              .then(response=>{\n            console.log(response)\n            this.teams=response})\n          fetch(`http://localhost:5000/api/search/${status}?q=${value}&p=1`)\n            .then(response=> response.json())\n            .then(response=>{\n              console.log(response, this.query)\n              this.newses=response})\n        }\n        \n      }\n    },\n    '$route.query.status':{\n      immediate: true,\n      async handler(value){\n        console.log(this.query)\n        const query=this.$route.query.search\n        if(value!==undefined){\n          fetch(`http://localhost:5000/api/search/${value}?q=${query}&p=1`)\n            .then(response=> response.json())\n            .then(response=>{\n              console.log(response, this.query)\n              this.newses=response})\n        }\n      }\n    },\n    '$route.query.page':{\n      immediate: true,\n      async handler(value){\n        console.log(this.query)\n        const query=this.$route.query.search\n        const status=this.$route.query.status\n        if(value!==undefined){\n          fetch(`http://localhost:5000/api/search/${status}?q=${query}&p=${value}`)\n            .then(response=> response.json())\n            .then(response=>{\n              console.log(response, this.query)\n              this.newses=response})\n        }\n      }\n    }\n  },\n\n  methods:{\n    setStatus(status){\n      const route={\n                name:'news'\n            }\n            \n            route.query={\n                search: this.$route.query.search,\n                status: status,\n                page:1\n                \n            }\n            this.$router.push(route)\n    },\n      setPage(p){\n        this.page=p\n      },\n  },\n  \n}\n</script>\n@import url('https://fonts.googleapis.com/css2?family=Gotu&display=swap');\n<style scoped>\n  .middle{\n  margin: 0px auto;\n  margin-top: 0px;\n  width: 400px;\n}\n  .gutu{\n    font-family: 'Gotu', sans-serif;\n  }\n\n</style>\n\n"]}]}